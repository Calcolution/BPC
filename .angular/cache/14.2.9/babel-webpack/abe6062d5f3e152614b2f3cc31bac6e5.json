{"ast":null,"code":"import { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/dialog\";\nimport * as i2 from \"../../services/question.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/checkbox\";\nimport * as i6 from \"../../_models/club\";\n\nfunction ClubQuestionsChooseDialogComponent_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 14)(1, \"mat-checkbox\", 15);\n    i0.ɵɵlistener(\"change\", function ClubQuestionsChooseDialogComponent_th_4_Template_mat_checkbox_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r10.toggleAllRows() : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r0.selection.hasValue() && ctx_r0.isAllSelected())(\"indeterminate\", ctx_r0.selection.hasValue() && !ctx_r0.isAllSelected());\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 16)(1, \"mat-checkbox\", 17);\n    i0.ɵɵlistener(\"click\", function ClubQuestionsChooseDialogComponent_td_5_Template_mat_checkbox_click_1_listener($event) {\n      return $event.stopPropagation();\n    })(\"change\", function ClubQuestionsChooseDialogComponent_td_5_Template_mat_checkbox_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const row_r12 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event ? ctx_r14.selection.toggle(row_r12) : null);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r12 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", ctx_r1.selection.isSelected(row_r12));\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Nummer der Frage \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r16.number, \" \");\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Frage \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r17.question, \" \");\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Opt. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 16)(1, \"mat-checkbox\", 18);\n    i0.ɵɵlistener(\"change\", function ClubQuestionsChooseDialogComponent_td_14_Template_mat_checkbox_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const element_r18 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(element_r18.checkOptional());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", element_r18.optional);\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nfunction ClubQuestionsChooseDialogComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 20);\n    i0.ɵɵlistener(\"click\", function ClubQuestionsChooseDialogComponent_tr_16_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const row_r21 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.selection.toggle(row_r21));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ClubQuestionsChooseDialogComponent = /*#__PURE__*/(() => {\n  class ClubQuestionsChooseDialogComponent {\n    constructor(dialogRef, club, questionService) {\n      this.dialogRef = dialogRef;\n      this.club = club;\n      this.questionService = questionService;\n      this.questions = [];\n      this.displayedColumns = ['select', 'Nummer der Frage', 'Frage', 'Opt.'];\n      this.selection = new SelectionModel(true, []);\n    }\n    /**\n    * initialize dialog with questions out of the club and reads all other questions that are not included in club\n    */\n\n\n    ngOnInit() {\n      this.questions.push(...this.club.questions);\n      this.selection.select(...this.club.questions);\n      this.questionService.readAllQuestionsAsClubQuestions().subscribe(result => {\n        result.forEach(q => {\n          if (!this.questions.includes(q)) {\n            this.questions.push(q);\n          }\n        });\n      });\n    }\n    /**\n    * This method writes the selected questions in the club and closes the dialog, when the user clicks on the save-button\n    */\n\n\n    save() {\n      this.club.setQuestions(this.selection.selected);\n      this.dialogRef.close(this.club);\n    }\n    /**\n    * this method closes the dialog\n    */\n\n\n    close() {\n      this.dialogRef.close(this.club);\n    }\n    /**\n    * Checks if all rows are selected\n    * @return Whether the number of selected elements matches the total number of rows.\n    */\n\n\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.questions.length;\n      return numSelected === numRows;\n    }\n    /**\n    * Selects all rows if they are not all selected - otherwise clear selection.\n    */\n\n\n    toggleAllRows() {\n      if (this.isAllSelected()) {\n        this.selection.clear();\n      } else {\n        this.selection.select(...this.questions);\n      }\n    }\n\n  }\n\n  ClubQuestionsChooseDialogComponent.ɵfac = function ClubQuestionsChooseDialogComponent_Factory(t) {\n    return new (t || ClubQuestionsChooseDialogComponent)(i0.ɵɵdirectiveInject(i1.DialogRef), i0.ɵɵdirectiveInject(DIALOG_DATA), i0.ɵɵdirectiveInject(i2.QuestionService));\n  };\n\n  ClubQuestionsChooseDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClubQuestionsChooseDialogComponent,\n    selectors: [[\"app-club-questions-choose-dialog\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[1, \"dialog_content\"], [1, \"table_content\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"select\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"Nummer der Frage\"], [\"matColumnDef\", \"Frage\"], [\"matColumnDef\", \"Opt.\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 3, \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"button_bar\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-header-cell\", \"\"], [3, \"checked\", \"indeterminate\", \"change\"], [\"mat-cell\", \"\"], [3, \"checked\", \"click\", \"change\"], [3, \"checked\", \"change\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 3, \"click\"]],\n    template: function ClubQuestionsChooseDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\", 2);\n        i0.ɵɵelementContainerStart(3, 3);\n        i0.ɵɵtemplate(4, ClubQuestionsChooseDialogComponent_th_4_Template, 2, 2, \"th\", 4);\n        i0.ɵɵtemplate(5, ClubQuestionsChooseDialogComponent_td_5_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(6, 6);\n        i0.ɵɵtemplate(7, ClubQuestionsChooseDialogComponent_th_7_Template, 2, 0, \"th\", 4);\n        i0.ɵɵtemplate(8, ClubQuestionsChooseDialogComponent_td_8_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(9, 7);\n        i0.ɵɵtemplate(10, ClubQuestionsChooseDialogComponent_th_10_Template, 2, 0, \"th\", 4);\n        i0.ɵɵtemplate(11, ClubQuestionsChooseDialogComponent_td_11_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(12, 8);\n        i0.ɵɵtemplate(13, ClubQuestionsChooseDialogComponent_th_13_Template, 2, 0, \"th\", 4);\n        i0.ɵɵtemplate(14, ClubQuestionsChooseDialogComponent_td_14_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(15, ClubQuestionsChooseDialogComponent_tr_15_Template, 1, 0, \"tr\", 9);\n        i0.ɵɵtemplate(16, ClubQuestionsChooseDialogComponent_tr_16_Template, 1, 0, \"tr\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ClubQuestionsChooseDialogComponent_Template_button_click_18_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(19, \"Schlie\\u00DFen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ClubQuestionsChooseDialogComponent_Template_button_click_20_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(21, \"Speichern\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.questions);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i3.MatButton, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow, i5.MatCheckbox],\n    styles: [\".dialog_content[_ngcontent-%COMP%]{border-radius:10px;height:500px;width:100%;padding:25px;background:white}.table_content[_ngcontent-%COMP%]{height:calc(100% - 36px);overflow:auto}.table_content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.button_bar[_ngcontent-%COMP%]{position:relative;float:right;height:36px}.button_bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-left:5px}\"]\n  });\n  return ClubQuestionsChooseDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}