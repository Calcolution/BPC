{"ast":null,"code":"import { of } from 'rxjs';\nimport { ClubQuestion } from '../_models/clubQuestion';\nimport { Answer } from '../_models/answer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../repository/repository\";\n/**\n* This service provides CRUD functionality of question objects\n*/\n\nexport let QuestionService = /*#__PURE__*/(() => {\n  class QuestionService {\n    constructor(repository) {\n      this.repository = repository;\n    }\n    /**\n    * reads all questions\n    * @return an observable of all questions\n    */\n\n\n    getAllQuestions() {\n      return of(this.repository.readAllQuestions());\n    }\n    /**\n    * this is a convenience method to convert from Questions into ClubQuestions.\n    * For this the All Questions will be read first and then converted into ClubQuestion-stubs.\n    * @return an observable of all questions as ClubQuestions\n    */\n\n\n    readAllQuestionsAsClubQuestions() {\n      let result = [];\n      this.getAllQuestions().subscribe(questions => {\n        questions.forEach(q => {\n          result.push(new ClubQuestion(q.number, q.question, false, q.category));\n        });\n      });\n      return of(result);\n    }\n    /**\n    * this is a convenience method to convert from Questions into Answers.\n    * For this the All Questions will be read first and then converted into Answer-stubs.\n    * @return an observable of all questions as answers\n    */\n\n\n    readAllQuestionsAsAnswers() {\n      let result = [];\n      this.getAllQuestions().subscribe(questions => {\n        questions.forEach(q => {\n          result.push(new Answer(q, 'noch keine Antwort vorhanden', false));\n        });\n      });\n      return of(result);\n    }\n\n  }\n\n  QuestionService.ɵfac = function QuestionService_Factory(t) {\n    return new (t || QuestionService)(i0.ɵɵinject(i1.QuestionRepository));\n  };\n\n  QuestionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuestionService,\n    factory: QuestionService.ɵfac,\n    providedIn: 'root'\n  });\n  return QuestionService;\n})();","map":null,"metadata":{},"sourceType":"module"}